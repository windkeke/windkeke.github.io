<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>IWR1443使用内置config文件</title>
    <url>/2020/04/22/iwr1443insert-config/</url>
    <content><![CDATA[<p>TI为推出的IWR1443毫米波雷达评估板提供了丰富可用的演示demo，这些都需要上电之后下载配置文件，这里经过修改可以将配置文件固化在固件中，使得评估板上电即开始工作。</p>
<ul>
<li><p>不过需要注意的是评估板的芯片版本必须与SDK的版本一致，否则会出现无法下载固件，CCS编译错误等问题。</p>
<p>我目前手头的IWR1443对应的SDK版本为mmwave_sdk_02_01_00_04</p>
<p>对应的demo工具箱版本号为mmwave_industrial_toolbox_3_6_1</p>
</li>
</ul>
<h2 id="在-mmwave-cli-c中添加CLI的头文件"><a href="#在-mmwave-cli-c中添加CLI的头文件" class="headerlink" title="在 mmwave_cli.c中添加CLI的头文件"></a>在 mmwave_cli.c中添加CLI的头文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;ti&#x2F;utils&#x2F;cli&#x2F;include&#x2F;cli_internal.h&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/.io//%5Cimg%5Ciwr1443insert-config%5C%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_015.png" alt="图片1"></p>
<h2 id="在mmwave-cli-c中添加CLI的结构体"><a href="#在mmwave-cli-c中添加CLI的结构体" class="headerlink" title="在mmwave_cli.c中添加CLI的结构体"></a>在mmwave_cli.c中添加CLI的结构体</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extern CLI_MCB      gCLI;</span><br></pre></td></tr></table></figure>

<p><img src="/.io//..%5Cimg%5Ciwr1443insert-config%5C%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_02.png" alt="图片2"></p>
<h2 id="在main-c文件中添加相应的功能定义"><a href="#在main-c文件中添加相应的功能定义" class="headerlink" title="在main.c文件中添加相应的功能定义"></a>在main.c文件中添加相应的功能定义</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extern void MmwDemo_Bypass_CLI (void);</span><br></pre></td></tr></table></figure>

<ul>
<li>在”void MmwDemo_initTask(UArg arg0, UArg arg1)”函数中调用MmwDemo_Bypass_CLI()函数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MmwDemo_Bypass_CLI();</span><br></pre></td></tr></table></figure>

<p><img src="/.io//..%5Cimg%5Ciwr1443insert-config%5C%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_03.png" alt="图片3"></p>
<h2 id="在mmwave-cli-c中添加配置信息"><a href="#在mmwave-cli-c中添加配置信息" class="headerlink" title="在mmwave_cli.c中添加配置信息"></a>在mmwave_cli.c中添加配置信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define CLI_BYPASS 1</span><br><span class="line"></span><br><span class="line">#define MAX_RADAR_CMD        24</span><br><span class="line"></span><br><span class="line">uint8_t* radarCmdString[MAX_RADAR_CMD] &#x3D;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">   &#123;&quot;sensorStop \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;flushCfg \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;dfeDataOutputMode 1 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;channelCfg 15 7 0 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;adcCfg 2 1 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;adcbufCfg 0 1 0 1 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;profileCfg 0 77 7 7 57.14 0 0 70 1 240 4884 0 0 30 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;chirpCfg 0 0 0 0 0 0 0 1 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;chirpCfg 1 1 0 0 0 0 0 4 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;chirpCfg 2 2 0 0 0 0 0 2 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;frameCfg 0 2 16 0 33.333 1 0 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;lowPower 0 0 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;guiMonitor 1 0 0 0 0 0 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;cfarCfg 0 2 8 4 3 0 768 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;peakGrouping 1 0 1 1 229 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;multiObjBeamForming 1 0.5 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;clutterRemoval 0 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;calibDcRangeSig 0 -5 8 256 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;compRangeBiasAndRxChanPhase 0.0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;measureRangeBiasAndRxChanPhase 0 1.5 0.2 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;CQRxSatMonitor 0 3 5 123 0 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;CQSigImgMonitor 0 119 4 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;analogMonitor 1 1 \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">   &#123;&quot;sensorStart \r\n&quot;&#125;,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static int32_t CLI_ByPassApi(CLI_Cfg* ptrCLICfg)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F;uint8_t cmdString[128];</span><br><span class="line"></span><br><span class="line">   char* tokenizedArgs[CLI_MAX_ARGS];</span><br><span class="line"></span><br><span class="line">   char* ptrCLICommand;</span><br><span class="line"></span><br><span class="line">   char delimitter[] &#x3D; &quot; \r\n&quot;;</span><br><span class="line"></span><br><span class="line">   uint32_t argIndex;</span><br><span class="line"></span><br><span class="line">   CLI_CmdTableEntry* ptrCLICommandEntry;</span><br><span class="line"></span><br><span class="line">   int32_t cliStatus;</span><br><span class="line"></span><br><span class="line">   uint32_t index, idx;</span><br><span class="line"></span><br><span class="line">   uint16_t numCLICommands &#x3D; 0U;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#x2F;* Sanity Check: Validate the arguments *&#x2F;</span><br><span class="line"></span><br><span class="line">   if (ptrCLICfg &#x3D;&#x3D; NULL)</span><br><span class="line"></span><br><span class="line">   return -1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#x2F;* Cycle through and determine the number of supported CLI commands: *&#x2F;</span><br><span class="line"></span><br><span class="line">   for (index &#x3D; 0; index &lt; CLI_MAX_CMD; index++)</span><br><span class="line"></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">       &#x2F;* Do we have a valid entry? *&#x2F;</span><br><span class="line"></span><br><span class="line">       if (ptrCLICfg-&gt;tableEntry[index].cmd &#x3D;&#x3D; NULL)</span><br><span class="line"></span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">           &#x2F;* NO: This is the last entry *&#x2F;</span><br><span class="line"></span><br><span class="line">           break;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       else</span><br><span class="line"></span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">           &#x2F;* YES: Increment the number of CLI commands *&#x2F;</span><br><span class="line"></span><br><span class="line">           numCLICommands &#x3D; numCLICommands + 1;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#x2F;* Execute All Radar Commands *&#x2F;</span><br><span class="line"></span><br><span class="line">   for (idx &#x3D; 0; idx &lt; MAX_RADAR_CMD; idx++)</span><br><span class="line"></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">       &#x2F;* Reset all the tokenized arguments: *&#x2F;</span><br><span class="line"></span><br><span class="line">       memset ((void *)&amp;tokenizedArgs, 0, sizeof(tokenizedArgs));</span><br><span class="line"></span><br><span class="line">       argIndex &#x3D; 0;</span><br><span class="line"></span><br><span class="line">       ptrCLICommand &#x3D; (char*)radarCmdString[idx];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       &#x2F;* Set the CLI status: *&#x2F;</span><br><span class="line"></span><br><span class="line">       cliStatus &#x3D; -1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       &#x2F;* The command has been entered we now tokenize the command message *&#x2F;</span><br><span class="line"></span><br><span class="line">       while (1)</span><br><span class="line"></span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">           &#x2F;* Tokenize the arguments: *&#x2F;</span><br><span class="line"></span><br><span class="line">           tokenizedArgs[argIndex] &#x3D; strtok(ptrCLICommand, delimitter);</span><br><span class="line"></span><br><span class="line">           if (tokenizedArgs[argIndex] &#x3D;&#x3D; NULL)</span><br><span class="line"></span><br><span class="line">               break;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#x2F;* Increment the argument index: *&#x2F;</span><br><span class="line"></span><br><span class="line">           argIndex++;</span><br><span class="line"></span><br><span class="line">           if (argIndex &gt;&#x3D; CLI_MAX_ARGS)</span><br><span class="line"></span><br><span class="line">               break;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#x2F;* Reset the command string *&#x2F;</span><br><span class="line"></span><br><span class="line">           ptrCLICommand &#x3D; NULL;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       &#x2F;* Were we able to tokenize the CLI command? *&#x2F;</span><br><span class="line"></span><br><span class="line">       if (argIndex &#x3D;&#x3D; 0)</span><br><span class="line"></span><br><span class="line">           continue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       &#x2F;* Cycle through all the registered CLI commands: *&#x2F;</span><br><span class="line"></span><br><span class="line">       for (index &#x3D; 0; index &lt; numCLICommands; index++)</span><br><span class="line"></span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">           ptrCLICommandEntry &#x3D; &amp;ptrCLICfg-&gt;tableEntry[index];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#x2F;* Do we have a match? *&#x2F;</span><br><span class="line"></span><br><span class="line">           if (strcmp(ptrCLICommandEntry-&gt;cmd, tokenizedArgs[0]) &#x3D;&#x3D; 0)</span><br><span class="line"></span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">               &#x2F;* YES: Pass this to the CLI registered function *&#x2F;</span><br><span class="line"></span><br><span class="line">               cliStatus &#x3D; ptrCLICommandEntry-&gt;cmdHandlerFxn (argIndex, tokenizedArgs);</span><br><span class="line"></span><br><span class="line">               if (cliStatus &#x3D;&#x3D; 0)</span><br><span class="line"></span><br><span class="line">               &#123;</span><br><span class="line"></span><br><span class="line">                   CLI_write (&quot;Done\n&quot;);</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               else</span><br><span class="line"></span><br><span class="line">               &#123;</span><br><span class="line"></span><br><span class="line">                   CLI_write (&quot;Error %d\n&quot;, cliStatus);</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               break;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       &#x2F;* Did we get a matching CLI command? *&#x2F;</span><br><span class="line"></span><br><span class="line">       if (index &#x3D;&#x3D; numCLICommands)</span><br><span class="line"></span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">           &#x2F;* NO matching command found. Is the mmWave extension enabled? *&#x2F;</span><br><span class="line"></span><br><span class="line">           if (ptrCLICfg-&gt;enableMMWaveExtension &#x3D;&#x3D; 1U)</span><br><span class="line"></span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">               &#x2F;* Yes: Pass this to the mmWave extension handler *&#x2F;</span><br><span class="line"></span><br><span class="line">               cliStatus &#x3D; CLI_MMWaveExtensionHandler (argIndex, tokenizedArgs);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#x2F;* Was the CLI command found? *&#x2F;</span><br><span class="line"></span><br><span class="line">           if (cliStatus &#x3D;&#x3D; -1)</span><br><span class="line"></span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">               &#x2F;* No: The command was still not found *&#x2F;</span><br><span class="line"></span><br><span class="line">               CLI_write (&quot;&#39;%s&#39; is not recognized as a CLI command\n&quot;, tokenizedArgs[0]);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void MmwDemo_Bypass_CLI (void)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">   if (CLI_ByPassApi(&amp;gCLI.cfg) !&#x3D; 0)</span><br><span class="line"></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">       System_printf (&quot;Error: Unable to CLI_ByPassApi\n&quot;);</span><br><span class="line"></span><br><span class="line">       return;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   return;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="编译生成bin文件"><a href="#编译生成bin文件" class="headerlink" title="编译生成bin文件"></a>编译生成bin文件</h2><p>在build setting选项中勾选生成bin文件</p>
<p><img src="/.io//..%5Cimg%5Ciwr1443insert-config%5C%E9%85%8D%E7%BD%AE.png" alt="图片4"></p>
]]></content>
      <categories>
        <category>毫米波雷达学习</category>
      </categories>
      <tags>
        <tag>MmwaveRadar</tag>
      </tags>
  </entry>
  <entry>
    <title>tags</title>
    <url>/2020/03/30/tags/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
